name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build binaries
        run: |
          chmod +x scripts/build.sh
          ./scripts/build.sh

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/freshdocs-*-darwin-amd64.tar.gz
            dist/freshdocs-*-darwin-arm64.tar.gz
            dist/freshdocs-*-linux-amd64.tar.gz
            dist/freshdocs-*-linux-arm64.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  homebrew:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout homebrew-freshdocs
        uses: actions/checkout@v4
        with:
          repository: dullaz/homebrew-freshdocs
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}

      - name: Get SHA256 hashes
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          
          # Get SHA256 for each platform
          DARWIN_AMD64_SHA=$(curl -sL "https://github.com/${{ github.repository }}/releases/download/$VERSION/freshdocs-$VERSION-darwin-amd64.tar.gz" | shasum -a 256 | cut -d' ' -f1)
          DARWIN_ARM64_SHA=$(curl -sL "https://github.com/${{ github.repository }}/releases/download/$VERSION/freshdocs-$VERSION-darwin-arm64.tar.gz" | shasum -a 256 | cut -d' ' -f1)
          LINUX_AMD64_SHA=$(curl -sL "https://github.com/${{ github.repository }}/releases/download/$VERSION/freshdocs-$VERSION-linux-amd64.tar.gz" | shasum -a 256 | cut -d' ' -f1)
          LINUX_ARM64_SHA=$(curl -sL "https://github.com/${{ github.repository }}/releases/download/$VERSION/freshdocs-$VERSION-linux-arm64.tar.gz" | shasum -a 256 | cut -d' ' -f1)
          
          echo "DARWIN_AMD64_SHA=$DARWIN_AMD64_SHA" >> $GITHUB_ENV
          echo "DARWIN_ARM64_SHA=$DARWIN_ARM64_SHA" >> $GITHUB_ENV
          echo "LINUX_AMD64_SHA=$LINUX_AMD64_SHA" >> $GITHUB_ENV
          echo "LINUX_ARM64_SHA=$LINUX_ARM64_SHA" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update Homebrew formula
        run: |
          cat > Formula/freshdocs.rb << EOF
          class Freshdocs < Formula
            desc "Keep your documentation as fresh as your code"
            homepage "https://github.com/${{ github.repository }}"
            version "$VERSION"
            
            on_macos do
              if Hardware::CPU.arm?
                url "https://github.com/${{ github.repository }}/releases/download/$VERSION/freshdocs-$VERSION-darwin-arm64.tar.gz"
                sha256 "$DARWIN_ARM64_SHA"
              else
                url "https://github.com/${{ github.repository }}/releases/download/$VERSION/freshdocs-$VERSION-darwin-amd64.tar.gz"
                sha256 "$DARWIN_AMD64_SHA"
              end
            end
            
            on_linux do
              if Hardware::CPU.arm?
                url "https://github.com/${{ github.repository }}/releases/download/$VERSION/freshdocs-$VERSION-linux-arm64.tar.gz"
                sha256 "$LINUX_ARM64_SHA"
              else
                url "https://github.com/${{ github.repository }}/releases/download/$VERSION/freshdocs-$VERSION-linux-amd64.tar.gz"
                sha256 "$LINUX_AMD64_SHA"
              end
            end
            
            def install
              bin.install "freshdocs"
            end
            
            test do
              system "#{bin}/freshdocs", "--version"
            end
          end
          EOF

      - name: Commit and push changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add Formula/freshdocs.rb
          git commit -m "Update freshdocs to ${{ github.ref_name }}"
          git push 